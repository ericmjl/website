title: How to fix PyPI upload errors related to license metadata
---
author: Eric J. Ma
---
body:

## Background

I use a [GitHub Actions workflow](https://github.com/ericmjl/llamabot/blob/main/.github/workflows/release-python-package.yaml) to automate the release process for my Python packages. The workflow was designed to:

1. Bump the version number
2. Automatically generate release notes using [LlamaBot](https://github.com/ericmjl/llamabot)
3. Build the package using `uv`, a blazing-fast Python package installer and resolver
4. Upload to PyPI
5. Create a GitHub release

I chose `uv` for my CI/CD pipelines because it's significantly faster than pip and provides more reliable dependency resolution. However, even with `uv`'s modern tooling, I encountered this error:

```text
error: Upload failed with status code 400 Bad Request. Server says: 400 license-file introduced in metadata version 2.4
```

## The problem

The error occurred because I was using setuptools as my build backend, which has less mature support for newer PEP 621 metadata features like the `license` field with a `file` specification. This led me down a path of discovery about modern Python packaging tools. Even though I was using `uv` for package installation, the underlying build system still needed modernization.

## The solution: Switch to Hatchling

### Pre-requisites

- A Python package with a `pyproject.toml` file
- GitHub Actions workflow for package publishing

### Steps

1. Update your `pyproject.toml` build system specification from setuptools to Hatchling:

```toml
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
```

2. Keep your existing license specification:

```toml
[project]
# ... other fields ...
license = { file = "LICENSE" }
```

That's it! The error should be resolved because Hatchling has better support for modern packaging metadata.

## Explanation

The Python packaging ecosystem has been evolving rapidly. Newer tools like Hatchling are built from the ground up to support modern packaging standards and provide better defaults. The error I encountered was just one symptom of using an older tool (setuptools) that's still catching up with newer metadata specifications.

## References

- [Why Hatch?](https://hatch.pypa.io/1.7/why/)
- [Python Packaging User Guide](https://packaging.python.org/)
- [Python Discourse Discussion on Build Backends](https://discuss.python.org/t/good-packaging-setuptools-whatever-tutorial/19378)

---
pub_date: 2025-03-01
---
twitter_handle: ericmjl
---
summary: Encountering a PyPI upload error related to license metadata? The solution is straightforward - switch from setuptools to Hatchling as your build backend. In this post, I walk through how to fix the "license-file introduced in metadata version 2.4" error by updating your pyproject.toml configuration. Along the way, I learned some new things, including the fact that modern build backends like Hatchling provide better support for PEP 621 metadata features compared to older tools like setuptools.
---
tags:

python
packaging
pypi
hatchling
setuptools
build-backend
metadata
license
github actions
workflow
automation
deployment
error handling
